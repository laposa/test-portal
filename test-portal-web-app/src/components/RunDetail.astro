---
import { TestResult, TestType } from "../enums";
import type { Run } from "../interfaces";

interface Props {
	run: Run;
}

const { run } = Astro.props;
---

<table>
   <thead>
    <tr>
      <th>{run.test.title}</th>
      <th>Value</th>
    </tr>
  </thead>
  <tbody>
		<tr>
			<td>Run ID</td>
			<td>{run.id}</td>
		</tr>
		<tr>
			<td>Result</td>
			<td>{run.result === TestResult.Passed ? <span class="pass">Passed</span> : <span class="fail">Failed</span>}</td>
		</tr>
		<tr>
			<td>Timestamp</td>
			<td>{run.timestamp}</td>
		</tr>
		<tr>
			<td>Last Passed</td>
			<td>{run.timestamp}</td>
		</tr>
		<tr>
			<td>Last Failed</td>
			<td>{run.timestamp}</td>
		</tr>
		<tr>
			<td>Code</td>
			<td><a href="#">Show</a></td>
		</tr>
		<tr>
			<td>Error</td>
			<td>{run.error ?? '--'}</td>
		</tr>
		<tr>
			<td colspan="2"><button>{run.test.type === TestType.Automated ? "Run test" : "Show instructions"}</button></td>
  </tbody>
</table>

<style>
	table {
		margin-top: 20px;
	}

	.runs {
		& .filter {
			width: 100%;
			display: flex;
			gap: 10px;
			margin: 1rem 0;

			& .search {
				width: 30%;
				position: relative;

				& input {
					width: 100%;
				}

				& img {
					width: 20px;
					position: absolute;
					right: 0.5rem;
					top: 8px;
					cursor: pointer;
				}
			}

			& .date {
				width: 15%;
			}

			& .issuer {
				width: 20%;
			}

			& a {
				display: flex;
				margin-left: auto;
				background-color: var(--primary);
				border: none;
				color: white;
				text-decoration: none;
				padding: 0 2.5rem 0 1rem;
				align-items: center;
				position: relative;

				&:after {
					content: "+";
					position: absolute;
					top: -2px;
					line-height: normal;
					right: 1rem;
					font-size: 2rem;
				}
			}
		}
	}

	table {
		& th, td {
			width: 50%;
			border: 1px solid var(--primary-opaque);
			text-align: center!important;
		}
	}
</style>