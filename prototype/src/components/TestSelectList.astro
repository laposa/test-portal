---
const { selector, select, link, tests } = Astro.props;
import type { Test } from '../interfaces';
import { TestResult, TestType } from '../enums';
import { formatTestResult, formatTimestamp } from '../utils/formatter';


export const mockTests: Test[] = [
	{
		id: 1,
		title: '001_User_can_login',
		lastResult: TestResult.Passed,
		timestamp: '14:24:34 21.05.2024',
		type: TestType.Automated,
	},
	{
		id: 2,
		title: '002_User_cannot_login_with_invalid_credentials',
		lastResult: TestResult.Failed,
		timestamp: '14:24:34 21.05.2024',
		type: TestType.Manual,
		error: 'Bad request after click on login',
		instructions: '1. fill in username \n 2. fill in password \n 3. click on login',

	},
	{
		id: 3,
		title: '003_User_input_is_validated',
		lastResult: TestResult.Passed,
		timestamp: '14:24:34 21.05.2024',
		type: TestType.Automated,
	},
];

export const freshTests: Test[] = [
	{
		id: 1,
		title: 'Login screen renders',
		lastResult: TestResult.NotRun,
		timestamp: '',
		type: TestType.Automated,
	},
	{
		id: 2,
		title: 'User can login to the application',
		lastResult: TestResult.NotRun,
		timestamp: '',
		type: TestType.Manual,
		error: '',
		instructions: '1. fill in username \n 2. fill in password \n 3. click on login',
	},
	{
		id: 3,
		title: 'User can logout of the application',
		lastResult: TestResult.NotRun,
		timestamp: '',
		type: TestType.Automated,
	},
];

const today = new Date();
---

<table class:list={[{select: select}]}>
	<thead>
		<tr>
			{ select && 
				<th>
					<label for={selector + "-all"} class="checkbox all">
						<input type="checkbox" id={selector + "-all"}>
						<span class="checkmark"></span>
					</label>
				</th>
			}
			<th>Test</th>
			<th>Type</th>
		</tr>
	</thead>
	<tbody>
		{
			(tests ?? mockTests).map((test) => (
				<tr>
					{ select && 
						<td>
							<label for={selector + "-test-" + test.id} class="checkbox">
								<input type="checkbox" name="manual" id={selector + "-test-" + test.id}>
								<span class="checkmark"></span>
							</label>
						</td>
					}
					<td>
						{ 
							link 
							? <a href={link + test.id}>{test.title}</a>
							: <span>{test.title}</span>
						}
					</td>
					<td>
						{test.type === TestType.Automated ? <span>Automated</span> : <span>Manual</span> }
					</td>
				</tr>
			))
		}
	</tbody>
</table>

<style>
</style>